version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      
      # Email Service
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL}
      
      # Trading Configuration
      - APP_MODE=paper
      - TRADING_MODE=auto
      - COINDESK_API_KEY=${COINDESK_API_KEY}
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - REDIS_URL=redis://redis:6379/0
      - STARTING_CASH_USD=10000
      - NEWS_SECONDARY=NewsAPI
      - NEWS_RECENCY_HALF_LIFE_MIN=90
      - NEWS_CREDIBILITY_TABLE=marketwatch:1.0,newsapi:0.8,gnews:0.7
      - NEWS_HALT_WINDOW_MIN=20
      - MAX_POSITION_PCT=0.2
      - DAILY_LOSS_HALT_PCT=0.02
      - SLIPPAGE_BPS=5
      - FEE_BPS=10
      
      # OAuth (optional)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-}
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-fintech_redis_pass}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: fintech-network
